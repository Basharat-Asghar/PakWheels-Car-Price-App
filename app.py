# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XYZutlyCxTxKiEvsuH1HESYwcWzzyCLq
"""

from flask import Flask, request, render_template
import joblib
import pandas as pd
import numpy as np

# Load trained pipeline
pipeline = joblib.load("lgbm_pipeline_final.pkl")
lgbm_model = pipeline.named_steps["regressor"]

# Define dropdown options (you can extract from your df)
fuel_options = ['Petrol', 'Diesel', 'Hybrid', 'CNG', 'Electric', 'LPG']
transmission_options = ['Automatic', 'Manual']
engine_type_options = ['ICE', 'EV', 'Hybrid']
company_options = ['Toyota', 'Honda', 'Suzuki', 'Mercedes Benz', 'Other']  # add more as needed
model_options = ['Corolla', 'Civic', 'Liana', 'S Class', 'Other']  # add more as needed

app = Flask(__name__)

@app.route("/", methods=["GET", "POST"])
def home():
    prediction = None
    top_features = None

    if request.method == "POST":
        data = {
            "year": int(request.form["year"]),
            "fuel": request.form["fuel"],
            "transmission": request.form["transmission"],
            "mileage_km": float(request.form["mileage_km"]),
            "engine_type": request.form["engine_type"],
            "company": request.form["company"],
            "model": request.form["model"],
            "engine_cc": float(request.form.get("engine_cc", 0)),
            "battery_kwh": float(request.form.get("battery_kwh", 0))
        }

        df = pd.DataFrame([data])
        prediction = pipeline.predict(df)[0]

        # Feature importance for this prediction (approximate, global importance)
        feature_names = pipeline.named_steps["preprocessor"].get_feature_names_out()
        importances = lgbm_model.feature_importances_
        indices = np.argsort(importances)[::-1]
        top_features = [(feature_names[i], importances[i]) for i in indices[:5]]

    return render_template(
        "index.html",
        prediction=prediction,
        top_features=top_features,
        fuel_options=fuel_options,
        transmission_options=transmission_options,
        engine_type_options=engine_type_options,
        company_options=company_options,
        model_options=model_options
    )

if __name__ == "__main__":
    app.run(debug=True)